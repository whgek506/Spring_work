package user.dao;

import java.util.List;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.support.JdbcDaoSupport;

import lombok.Setter;
import user.bean.UserDTO;

/* 
public class UserDAOImpl implements UserDAO{
	@Setter
	private JdbcTemplate jdbcTemplate;

	@Override
	public void write(UserDTO userDTO) {
		String sql = "insert into usertable values(?,?,?)";
		
		//insert/update/delete 기능을 update이 대신 처리
		jdbcTemplate.update(sql, 
							userDTO.getName(),
							userDTO.getId(),
							userDTO.getPwd());
		
	}

	@Override
	public List<UserDTO> getUserList() {
		String sql = "select * from usertable";
		
		//BeanPropertyRowMapper() : 한줄한줄 SQL 매핑 해줌
		return jdbcTemplate.query(sql,
								  new BeanPropertyRowMapper<UserDTO>(UserDTO.class));
	}
}
*/

public class UserDAOImpl extends JdbcDaoSupport implements UserDAO {

	@Override
	public void write(UserDTO userDTO) {
		String sql = "insert into usertable values(?,?,?)";
		
		//getJdbcTemplate() -> JdbcDaoSupport의 메소드
		//insert/update/delete 기능을 update이 대신 처리
		getJdbcTemplate().update(sql, 
							userDTO.getName(),
							userDTO.getId(),
							userDTO.getPwd());
		
	}

	@Override
	public List<UserDTO> getUserList() {
		String sql = "select * from usertable";
		
		//BeanPropertyRowMapper() : 한줄한줄 SQL 매핑 해줌
		return getJdbcTemplate().query(sql,
								  new BeanPropertyRowMapper<UserDTO>(UserDTO.class));
	}
	
	
}
